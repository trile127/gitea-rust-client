/* 
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.21.11
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// CreateWikiPageOptions : CreateWikiPageOptions form for creating wiki

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct CreateWikiPageOptions {
  /// content must be base64 encoded
  #[serde(rename = "content_base64")]
  content_base64: Option<String>,
  /// optional commit message summarizing the change
  #[serde(rename = "message")]
  message: Option<String>,
  /// page title. leave empty to keep unchanged
  #[serde(rename = "title")]
  title: Option<String>
}

impl CreateWikiPageOptions {
  /// CreateWikiPageOptions form for creating wiki
  pub fn new() -> CreateWikiPageOptions {
    CreateWikiPageOptions {
      content_base64: None,
      message: None,
      title: None
    }
  }

  pub fn set_content_base64(&mut self, content_base64: String) {
    self.content_base64 = Some(content_base64);
  }

  pub fn with_content_base64(mut self, content_base64: String) -> CreateWikiPageOptions {
    self.content_base64 = Some(content_base64);
    self
  }

  pub fn content_base64(&self) -> Option<&String> {
    self.content_base64.as_ref()
  }

  pub fn reset_content_base64(&mut self) {
    self.content_base64 = None;
  }

  pub fn set_message(&mut self, message: String) {
    self.message = Some(message);
  }

  pub fn with_message(mut self, message: String) -> CreateWikiPageOptions {
    self.message = Some(message);
    self
  }

  pub fn message(&self) -> Option<&String> {
    self.message.as_ref()
  }

  pub fn reset_message(&mut self) {
    self.message = None;
  }

  pub fn set_title(&mut self, title: String) {
    self.title = Some(title);
  }

  pub fn with_title(mut self, title: String) -> CreateWikiPageOptions {
    self.title = Some(title);
    self
  }

  pub fn title(&self) -> Option<&String> {
    self.title.as_ref()
  }

  pub fn reset_title(&mut self) {
    self.title = None;
  }

}



