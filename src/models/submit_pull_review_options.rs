/* 
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.21.11
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// SubmitPullReviewOptions : SubmitPullReviewOptions are options to submit a pending pull review

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct SubmitPullReviewOptions {
  #[serde(rename = "body")]
  body: Option<String>,
  #[serde(rename = "event")]
  event: Option<::models::ReviewStateType>
}

impl SubmitPullReviewOptions {
  /// SubmitPullReviewOptions are options to submit a pending pull review
  pub fn new() -> SubmitPullReviewOptions {
    SubmitPullReviewOptions {
      body: None,
      event: None
    }
  }

  pub fn set_body(&mut self, body: String) {
    self.body = Some(body);
  }

  pub fn with_body(mut self, body: String) -> SubmitPullReviewOptions {
    self.body = Some(body);
    self
  }

  pub fn body(&self) -> Option<&String> {
    self.body.as_ref()
  }

  pub fn reset_body(&mut self) {
    self.body = None;
  }

  pub fn set_event(&mut self, event: ::models::ReviewStateType) {
    self.event = Some(event);
  }

  pub fn with_event(mut self, event: ::models::ReviewStateType) -> SubmitPullReviewOptions {
    self.event = Some(event);
    self
  }

  pub fn event(&self) -> Option<&::models::ReviewStateType> {
    self.event.as_ref()
  }

  pub fn reset_event(&mut self) {
    self.event = None;
  }

}



