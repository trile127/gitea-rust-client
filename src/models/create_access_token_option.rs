/* 
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.21.11
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// CreateAccessTokenOption : CreateAccessTokenOption options when create access token

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct CreateAccessTokenOption {
  #[serde(rename = "name")]
  name: String,
  #[serde(rename = "scopes")]
  scopes: Option<Vec<String>>
}

impl CreateAccessTokenOption {
  /// CreateAccessTokenOption options when create access token
  pub fn new(name: String) -> CreateAccessTokenOption {
    CreateAccessTokenOption {
      name: name,
      scopes: None
    }
  }

  pub fn set_name(&mut self, name: String) {
    self.name = name;
  }

  pub fn with_name(mut self, name: String) -> CreateAccessTokenOption {
    self.name = name;
    self
  }

  pub fn name(&self) -> &String {
    &self.name
  }


  pub fn set_scopes(&mut self, scopes: Vec<String>) {
    self.scopes = Some(scopes);
  }

  pub fn with_scopes(mut self, scopes: Vec<String>) -> CreateAccessTokenOption {
    self.scopes = Some(scopes);
    self
  }

  pub fn scopes(&self) -> Option<&Vec<String>> {
    self.scopes.as_ref()
  }

  pub fn reset_scopes(&mut self) {
    self.scopes = None;
  }

}



