/* 
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.21.11
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// PullReviewRequestOptions : PullReviewRequestOptions are options to add or remove pull review requests

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct PullReviewRequestOptions {
  #[serde(rename = "reviewers")]
  reviewers: Option<Vec<String>>,
  #[serde(rename = "team_reviewers")]
  team_reviewers: Option<Vec<String>>
}

impl PullReviewRequestOptions {
  /// PullReviewRequestOptions are options to add or remove pull review requests
  pub fn new() -> PullReviewRequestOptions {
    PullReviewRequestOptions {
      reviewers: None,
      team_reviewers: None
    }
  }

  pub fn set_reviewers(&mut self, reviewers: Vec<String>) {
    self.reviewers = Some(reviewers);
  }

  pub fn with_reviewers(mut self, reviewers: Vec<String>) -> PullReviewRequestOptions {
    self.reviewers = Some(reviewers);
    self
  }

  pub fn reviewers(&self) -> Option<&Vec<String>> {
    self.reviewers.as_ref()
  }

  pub fn reset_reviewers(&mut self) {
    self.reviewers = None;
  }

  pub fn set_team_reviewers(&mut self, team_reviewers: Vec<String>) {
    self.team_reviewers = Some(team_reviewers);
  }

  pub fn with_team_reviewers(mut self, team_reviewers: Vec<String>) -> PullReviewRequestOptions {
    self.team_reviewers = Some(team_reviewers);
    self
  }

  pub fn team_reviewers(&self) -> Option<&Vec<String>> {
    self.team_reviewers.as_ref()
  }

  pub fn reset_team_reviewers(&mut self) {
    self.team_reviewers = None;
  }

}



