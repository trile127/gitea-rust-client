/* 
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.21.11
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Reference {
  #[serde(rename = "object")]
  object: Option<::models::GitObject>,
  #[serde(rename = "ref")]
  _ref: Option<String>,
  #[serde(rename = "url")]
  url: Option<String>
}

impl Reference {
  pub fn new() -> Reference {
    Reference {
      object: None,
      _ref: None,
      url: None
    }
  }

  pub fn set_object(&mut self, object: ::models::GitObject) {
    self.object = Some(object);
  }

  pub fn with_object(mut self, object: ::models::GitObject) -> Reference {
    self.object = Some(object);
    self
  }

  pub fn object(&self) -> Option<&::models::GitObject> {
    self.object.as_ref()
  }

  pub fn reset_object(&mut self) {
    self.object = None;
  }

  pub fn set__ref(&mut self, _ref: String) {
    self._ref = Some(_ref);
  }

  pub fn with__ref(mut self, _ref: String) -> Reference {
    self._ref = Some(_ref);
    self
  }

  pub fn _ref(&self) -> Option<&String> {
    self._ref.as_ref()
  }

  pub fn reset__ref(&mut self) {
    self._ref = None;
  }

  pub fn set_url(&mut self, url: String) {
    self.url = Some(url);
  }

  pub fn with_url(mut self, url: String) -> Reference {
    self.url = Some(url);
    self
  }

  pub fn url(&self) -> Option<&String> {
    self.url.as_ref()
  }

  pub fn reset_url(&mut self) {
    self.url = None;
  }

}



