/* 
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.21.11
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// NodeInfoUsage : NodeInfoUsage contains usage statistics for this server

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct NodeInfoUsage {
  #[serde(rename = "localComments")]
  local_comments: Option<i64>,
  #[serde(rename = "localPosts")]
  local_posts: Option<i64>,
  #[serde(rename = "users")]
  users: Option<::models::NodeInfoUsageUsers>
}

impl NodeInfoUsage {
  /// NodeInfoUsage contains usage statistics for this server
  pub fn new() -> NodeInfoUsage {
    NodeInfoUsage {
      local_comments: None,
      local_posts: None,
      users: None
    }
  }

  pub fn set_local_comments(&mut self, local_comments: i64) {
    self.local_comments = Some(local_comments);
  }

  pub fn with_local_comments(mut self, local_comments: i64) -> NodeInfoUsage {
    self.local_comments = Some(local_comments);
    self
  }

  pub fn local_comments(&self) -> Option<&i64> {
    self.local_comments.as_ref()
  }

  pub fn reset_local_comments(&mut self) {
    self.local_comments = None;
  }

  pub fn set_local_posts(&mut self, local_posts: i64) {
    self.local_posts = Some(local_posts);
  }

  pub fn with_local_posts(mut self, local_posts: i64) -> NodeInfoUsage {
    self.local_posts = Some(local_posts);
    self
  }

  pub fn local_posts(&self) -> Option<&i64> {
    self.local_posts.as_ref()
  }

  pub fn reset_local_posts(&mut self) {
    self.local_posts = None;
  }

  pub fn set_users(&mut self, users: ::models::NodeInfoUsageUsers) {
    self.users = Some(users);
  }

  pub fn with_users(mut self, users: ::models::NodeInfoUsageUsers) -> NodeInfoUsage {
    self.users = Some(users);
    self
  }

  pub fn users(&self) -> Option<&::models::NodeInfoUsageUsers> {
    self.users.as_ref()
  }

  pub fn reset_users(&mut self) {
    self.users = None;
  }

}



