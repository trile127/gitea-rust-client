/* 
 * Gitea API
 *
 * This documentation describes the Gitea API.
 *
 * OpenAPI spec version: 1.21.11
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// CommitAffectedFiles : CommitAffectedFiles store information about files affected by the commit

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct CommitAffectedFiles {
  #[serde(rename = "filename")]
  filename: Option<String>,
  #[serde(rename = "status")]
  status: Option<String>
}

impl CommitAffectedFiles {
  /// CommitAffectedFiles store information about files affected by the commit
  pub fn new() -> CommitAffectedFiles {
    CommitAffectedFiles {
      filename: None,
      status: None
    }
  }

  pub fn set_filename(&mut self, filename: String) {
    self.filename = Some(filename);
  }

  pub fn with_filename(mut self, filename: String) -> CommitAffectedFiles {
    self.filename = Some(filename);
    self
  }

  pub fn filename(&self) -> Option<&String> {
    self.filename.as_ref()
  }

  pub fn reset_filename(&mut self) {
    self.filename = None;
  }

  pub fn set_status(&mut self, status: String) {
    self.status = Some(status);
  }

  pub fn with_status(mut self, status: String) -> CommitAffectedFiles {
    self.status = Some(status);
    self
  }

  pub fn status(&self) -> Option<&String> {
    self.status.as_ref()
  }

  pub fn reset_status(&mut self) {
    self.status = None;
  }

}



